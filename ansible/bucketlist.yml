---
- hosts: bucketlist
  become: yes
  become_user: root
  vars:
    nvm_version: 0.33.4
    nvm_node_version: 8.4.0
    nvm_user: vagrant
  environment:
    DATABASE_URL: postgresql://postgres:pass@localhost:5432/bucketlist_stage
    BUCKETLIST_ENV: staging

  tasks:
  - name: Install dependencies
    apt:
      name: "{{ item }}"
      state: present
    with_items:
    - nginx
    - postgresql
    - uwsgi

  - name: Install nodejs &  npm
    shell: |
      curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
      sudo apt-get install -y nodejs
    args:
      executable: /bin/bash

  - name: Start nginx and postgresql
    service: 
      name: "{{ item }}" 
      state: started 
      enabled: true
    with_items:
    - nginx
    - postgresql
    - uwsgi

  - name: Disable default nginx site
    file: 
      path: /etc/nginx/sites-enabled/default 
      state: absent
    notify:
      - Restart nginx

  - name: Configure nginx
    template:
      src: templates/bucketlist
      dest: /etc/nginx/sites-available/bucketlist

  - name: Add bucketlist to site-enabled
    file:
      path=/etc/nginx/sites-enabled/bucketlist
      src=/etc/nginx/sites-available/bucketlist
      state=link
      force=yes
    notify:
      - Restart nginx

  - name: Copy Postgres configurations
    template: src=templates/pg_hba.conf dest=/etc/postgresql/9.3/main/pg_hba.conf
    notify:
      - Restart postgres

  - name: Create app folder
    file:
      path: app/
      state: directory
      mode: 0755
      owner: vagrant
      group: vagrant

  - name: Clone the bucketlist app from github
    git:
      repo: https://github.com/SProjects/bucketlist_andela.git
      dest: app/
      force: yes
    become: yes
    become_user: vagrant

  - name: Copy frontend config file
    template:
      src=templates/app.config.ts dest=/home/vagrant/app/bucketlist/client/src/app/app.config.ts

  - name: Copy app.ini configurations to virtual machine
    template:
      src=templates/app.ini dest=/home/vagrant/app/app.ini

  - name: Copy wsgi.py configurations to virtual machine
    template:
      src=templates/wsgi.py dest=/home/vagrant/app/wsgi.py

  - name: Create uwgi bucketlist logging file
    file:
      path: /var/log/uwsgi/bucketlist.log
      state: touch
      mode: 0750
      owner: root
      force: yes

  - name: Create virtual environment and install requirements
    shell: | 
      virtualenv venv
      source venv/bin/activate
      pip install -r requirements.txt
      pip install uwsgi
    args:
      chdir: app/
      executable: /bin/bash

  - name: Copy uwsgi configuration to virtual machine
    template:
      src=templates/bucketlist.conf dest=/etc/init/bucketlist.conf
    notify:
      - Start uwsgi

  - name: Create Postgres DB
    postgresql_db:
      name: bucketlist_stage
      state: present
      login_user: postgres
      login_password: pass
    become: yes
    become_user: postgres

  - name: Grant user postgres access to database
    postgresql_user:
      db: bucketlist_stage
      name: postgres
      password: pass
      priv: ALL
      login_user: postgres
      login_password: pass
    become: yes
    become_user: postgres

  - name: Run migrations
    shell: | 
      source venv/bin/activate
      python manage.py db upgrade
    args:
      chdir: app/
      executable: /bin/bash
    notify:
      - Restart postgres
      - Restart nginx
  
  #  - name: Install nvm
  #    shell: | 
  #      if [ ! -d /home/vagrant/.nvm ]; then
  #        curl https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash
  #        source ~/.profile
  #      fi
  #      source ~/.bashrc
  #      nvm install 8.4.0
  #    args:
  #      executable: /bin/bash
  #    become: yes
  #    become_user: vagrant

  - name: Generate JS assets
    shell: | 
      npm install
      npm run build
    args:
      chdir: /home/vagrant/app/bucketlist/client
      executable: /bin/bash
    become: yes
    become_user: vagrant

  handlers:
    - name: Restart postgres
      service: name=postgresql state=restarted

    - name: Start uwsgi
      shell: | 
        start bucketlist

    - name: Restart nginx
      service: name=nginx state=restarted
